$('.nativedatepicker').live('focus',function(event) {
 //alert("haidate");
        var currentField = $(this),
            myNewDate = currentField.attr('x-date') ? new Date(currentField.attr('x-date')) : new Date();

        // Same handling for iPhone and Android
        window.plugins.datePicker.show({
            date : myNewDate,
            mode : 'date', // date or time or blank for both
            allowOldDates : true
        }, function(returnDate) {
            var newDate = new Date(returnDate),
                day = newDate.getDate(),
                month = newDate.getMonth(),
                year = newDate.getFullYear();
            newDate = ( day.toString().length == 1 ? '0'+day : day ) + '/' + ( month.toString().length == 1 ? '0'+month : month ) + '/' + year;
            currentField.val(newDate);
            currentField.attr('x-date', returnDate);

            // This fixes the problem you mention at the bottom of this script with it not working a second/third time around, because it is in focus.
            currentField.blur();
        });
    });



    $('.nativetimepicker').live('focus',function(event) {
  //alert("haitime");
        var currentField = $(this),
            time = currentField.val(),
            myNewTime = new Date();

        myNewTime.setHours(time.substr(0, 2));
        myNewTime.setMinutes(time.substr(3, 2));

        // Same handling for iPhone and Android
        plugins.datePicker.show({
            date : myNewTime,
            mode : 'time', // date or time or blank for both
            allowOldDates : true
        }, function(returnDate) {
          // returnDate is generated by .toLocaleString() in Java so it will be relative to the current time zone
            var newDate = new Date(returnDate),
                hour = newDate.getHours(),
                minute = newDate.getMinutes();
            newDate = ( hour.toString().length == 1 ? '0'+hour : hour ) + ':' + ( minute.toString().length == 1 ? '0'+minute : minute );
            currentField.val(newDate);

            currentField.blur();
        });
    });
